diff --git a/package.json b/package.json
index 41692326a6b560d48211ff9fade3def32d8de937..296bb6e3bf792711eb940f89422060b4d763e1c2 100644
--- a/package.json
+++ b/package.json
@@ -28,14 +28,14 @@
     "test": "node tests/tests.js",
     "ts-test": "tsc",
     "save-to-github": "save-to-github-cache --artifact build/Release/re2.node",
-    "install": "install-from-cache --artifact build/Release/re2.node --host-var RE2_DOWNLOAD_MIRROR --skip-path-var RE2_DOWNLOAD_SKIP_PATH --skip-ver-var RE2_DOWNLOAD_SKIP_VER || node-gyp -j max rebuild",
+    "install": "echo 'Skipping RE2 install'",
     "verify-build": "node scripts/verify-build.js",
     "build:dev": "node-gyp -j max build --debug",
-    "build": "node-gyp -j max build",
+    "build": "echo 'Skipping RE2 build'",
     "rebuild:dev": "node-gyp -j max rebuild --debug",
-    "rebuild": "node-gyp -j max rebuild",
-    "clean": "node-gyp clean && node-gyp configure",
-    "clean-build": "node-gyp clean"
+    "rebuild": "echo 'Skipping RE2 rebuild'",
+    "clean": "echo 'Skipping RE2 clean'",
+    "clean-build": "echo 'Skipping RE2 clean-build'"
   },
   "github": "https://github.com/uhop/node-re2",
   "repository": {
diff --git a/re2.js b/re2.js
index ec4e4a032a14aab5f7bab7fddd29e88de79b52f4..e4844c9a5f60bbc57576bd6081e405cadf2fe8d6 100644
--- a/re2.js
+++ b/re2.js
@@ -1,39 +1,3 @@
-'use strict';
+"use strict";
 
-const RE2 = require('./build/Release/re2.node');
-// const RE2 = require('./build/Debug/re2.node');
-
-const setAliases = (object, dict) => {
-  for (let [name, alias] of Object.entries(dict)) {
-    Object.defineProperty(
-      object,
-      alias,
-      Object.getOwnPropertyDescriptor(object, name)
-    );
-  }
-};
-
-setAliases(RE2.prototype, {
-  match: Symbol.match,
-  search: Symbol.search,
-  replace: Symbol.replace,
-  split: Symbol.split
-});
-
-RE2.prototype[Symbol.matchAll] = function* (str) {
-  if (!this.global)
-    throw TypeError(
-      'String.prototype.matchAll() is called with a non-global RE2 argument'
-    );
-
-  const re = new RE2(this);
-  re.lastIndex = this.lastIndex;
-  for (;;) {
-    const result = re.exec(str);
-    if (!result) break;
-    if (result[0] === '') ++re.lastIndex;
-    yield result;
-  }
-};
-
-module.exports = RE2;
+module.exports = RegExp;
